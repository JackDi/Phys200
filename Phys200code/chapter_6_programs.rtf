{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 6.1\
\
def compare(x,y):\
	if x > y:\
		return 1\
	elif x==y:\
		return 0\
	elif x <y:\
		return -1\
\
6.2\
\
def hypotenuse(x,y):\
	return 0.0\
\
def hypotenuse(x,y):\
	dx= x**2\
	dy=y**2\
	print dx\
	print dy\
\
def hypotenuse(x,y):\
	dx= x**2\
	dy=y**2\
	dh=dy+dx\
	print dh\
\
def hypotenuse(x,y):\
	dx= x**2\
	dy=y**2\
	dh=dy+dx\
	h=math.sqrt(dh)\
	print h\
\
6.5\
\
def ack(m,n):\
	if m==0:\
		return n+1\
	elif m>0 and n==0:\
		return ack(m-1,1)\
	elif m>0 and n>0:\
		return ack(m-1,ack(m,n-1))\
\
6.6\
\
def first(word):\
	return word[0]\
\
def last(word):\
	return word[-1]\
\
def middle(word):\
	return word[1:-1]\
\
\
1. If you call middle with a string of two letters it returns and empty string, this is the same for if you call middle on a string with one letter or an empty string.\
\
2. \
\
def is_palindrome(word):\
	for i in range(len(word)):\
		if first(word)==last(word):\
			word=middle(word)\
			if len(word)==0:\
				print 'yes'\
			elif len(word)==1:\
				print'yes'\
			is_palindrome(word)\
		else:\
			print 'no'\
	\
\
\
\
\
\
\
\
\
\
\
\
}